(* ************************** *)
(* **** Particle classes **** *)
(* ************************** *)

M$ClassesDescription = {

(* Fermions: physical fields *)
  F[1] == {
    ClassName        -> uq,
    ClassMembers     -> {u, c, t},
    Mass             -> {Muq, {MU, 0.0023}, {MC, 1.27}, {MT, 172.44}},
    Width            -> 0,
    QuantumNumbers   -> {Q-> 2/3, LeptonNumber-> 0, BaryonNumber-> 2/3},
    Indices          -> {Index{ThreeGen}},
    FlavorIndex      -> ThreeGen,
    PropagatorLabel  -> {'uq', 'u', 'c', 't'},
    PropagatorType   -> Straight,
    PropagatorArrow  -> Forward,
    SelfConjugate    -> False,
    ParticleName     -> {u, c, t},
    AntiParticleName -> {'u~', 'c~', 't~'},
    FullName         -> {'u', 'c', 't'}
  },
  F[2] == {
    ClassName        -> vl,
    ClassMembers     -> {ve, vm, vt},
    Mass             -> {Mvl, {MVE, 0}, {MVM, 0}, {MVT, 0}},
    Width            -> 0,
    QuantumNumbers   -> {Q-> 0, LeptonNumber-> 1, BaryonNumber-> 0},
    Indices          -> {Index{ThreeGen}},
    FlavorIndex      -> ThreeGen,
    PropagatorLabel  -> {'vl', 've', 'vm', 'vt'},
    PropagatorType   -> Straight,
    PropagatorArrow  -> Forward,
    SelfConjugate    -> False,
    ParticleName     -> {ve, vm, vt},
    AntiParticleName -> {'ve~', 'vm~', 'vt~'},
    FullName         -> {'ve', 'vm', 'vt'}
  },
  F[3] == {
    ClassName        -> l,
    ClassMembers     -> {e, mu, ta},
    Mass             -> {Ml, {ME, 0.000511}, {MMU, 0.1056583745}, {MTA, 1.77686}},
    Width            -> 0,
    QuantumNumbers   -> {Q-> -1, LeptonNumber-> 1, BaryonNumber-> 0},
    Indices          -> {Index{ThreeGen}},
    FlavorIndex      -> ThreeGen,
    PropagatorLabel  -> {'l', 'e', 'mu', 'ta'},
    PropagatorType   -> Straight,
    PropagatorArrow  -> Forward,
    SelfConjugate    -> False,
    ParticleName     -> {e, mu, ta},
    AntiParticleName -> {'e~', 'mu~', 'ta~'},
    FullName         -> {'e', 'mu', 'ta'}
  },
  F[4] == {
    ClassName        -> dq,
    ClassMembers     -> {d, s, b},
    Mass             -> {Mdq, {MD, 0.0047}, {MS, 0.095}, {MB, 4.18}},
    Width            -> 0,
    QuantumNumbers   -> {Q-> -1/3, LeptonNumber-> 0, BaryonNumber-> -1/3},
    Indices          -> {Index{ThreeGen}},
    FlavorIndex      -> ThreeGen,
    PropagatorLabel  -> {'dq', 'd', 's', 'b'},
    PropagatorType   -> Straight,
    PropagatorArrow  -> Forward,
    SelfConjugate    -> False,
    ParticleName     -> {d, s, b},
    AntiParticleName -> {'d~', 's~', 'b~'},
    FullName         -> {'d', 's', 'b'}
  },

(* Fermions: unphysical fields *)
  F[11] == {
    ClassName        -> LL
    Unphysical       -> True,
    Indices          -> {SU2D, ThreeGen},
    FlavorIndex      -> ThreeGen,
    SelfConjugate    -> False,
    QuantumNumbers   -> {U1Y -> -1/2},
    Definitions      -> [LL[sp1_, 0, ff_, cc] :> Module[{sp2}, LL[sp2, cc, ff]], LL[sp1_, 1, ff_, cc] :> Module[{sp2}, LL[sp2, cc, ff]]]
  },
  F[12] == {
    ClassName        -> LR
    Unphysical       -> True,
    Indices          -> {ThreeGen},
    FlavorIndex      -> ThreeGen,
    SelfConjugate    -> False,
    QuantumNumbers   -> {U1Y -> -1/2},
    Definitions      -> [LR[sp1_, ff_, cc] :> Module[{sp2}, ProjLR[sp2, cc, ff]]]
  },
  F[13] == {
    ClassName        -> QL
    Unphysical       -> True,
    Indices          -> {SU2D, Colour, ThreeGen},
    FlavorIndex      -> ThreeGen,
    SelfConjugate    -> False,
    QuantumNumbers   -> {U1Y -> 1/6},
    Definitions      -> [QL[sp1_, 0, ff_, cc] :> Module[{sp2}, QL[sp2, cc, ff]], QL[sp1_, 1, ff_, cc] :> Module[{sp2}, QL[sp2, cc, ff]]]
  },
  F[14] == {
    ClassName        -> uR
    Unphysical       -> True,
    Indices          -> {Colour, ThreeGen},
    FlavorIndex      -> ThreeGen,
    SelfConjugate    -> False,
    QuantumNumbers   -> {U1Y -> 2/3},
    Definitions      -> [uR[sp1_, ff_, cc] :> Module[{sp2}, ProjuR[sp2, cc, ff]]]
  },
  F[15] == {
    ClassName        -> dR
    Unphysical       -> True,
    Indices          -> {Colour, ThreeGen},
    FlavorIndex      -> ThreeGen,
    SelfConjugate    -> False,
    QuantumNumbers   -> {U1Y -> -1/3},
    Definitions      -> [dR[sp1_, ff_, cc] :> Module[{sp2}, ProjdR[sp2, cc, ff]]]
  },
}


